{"meta":{"title":"刘辉的博客","subtitle":"付出努力才会得到回报","description":"刘辉的博客","author":"刘辉","url":"https://liuhoi.github.io"},"pages":[{"title":"about","date":"2017-10-21T12:34:31.000Z","updated":"2017-10-21T12:34:31.823Z","comments":true,"path":"about/index.html","permalink":"https://liuhoi.github.io/about/index.html","excerpt":"","text":""}],"posts":[{"title":"hexo+github建立博客","slug":"hexoAndgithubPulishBlog","date":"2017-10-21T12:21:35.000Z","updated":"2017-10-21T15:57:03.537Z","comments":true,"path":"2017/10/21/hexoAndgithubPulishBlog/","link":"","permalink":"https://liuhoi.github.io/2017/10/21/hexoAndgithubPulishBlog/","excerpt":"","text":"nodeJs准备 下载地址12查询node版本： node -v查询npm版本： npm -v github账户准备第一步: Github注册打开 注册地址，在下图的框中，分别输入自己的用户名，邮箱，密码。 注册 第二步: 创建代码库登陆之后，点击页面右上角的加号，选择New repository： 创建仓库1 进入代码库创建页面：在Repository name下填写yourname.github.io，Description (optional)下填写一些简单的描述（不写也没有关系），如图所示： 创建仓库2 注意：比如我的github名称是liuhoi ,这里你就填 liuhoi.github.io,如果你的名字是xiaoming，那你就填 xiaoming.github.io 第三步: Website设置 如下图所示 Website设置1 Website设置2 如果你的配置没有问题，那么大约15分钟之后，yourname.github.io这个网址就可以正常访问了~ 如果yourname.github.io已经可以正常访问了，那么Github一侧的配置已经全部结束了。 hexo 安装在自己认为合适的地方创建一个文件夹，这里我以E：/blog 为例子讲解，首先在E盘目录下创建blog文件夹，并在命令行的窗口进入到该目录 创建文件夹 进入之后 执行下面的命令1234567891011121314查询版本 hexo -versionnpm install hexo-cli -ghexo init blogcd blognpm installnpm install hexo-deployer-git --savenpm install hexo-renderer-less --save(预处理Less文件，如不使用indigo主题，则不执行此命令)npm install hexo-generator-feed --save(用于生成 rss，如不使用indigo主题，则不执行此命令)npm install hexo-generator-json-content --save(用于生成静态站点数据，用作站内搜索的数据源，如不使用indigo主题，则不执行此命令)nnpm install hexo-helper-qrcode --save(用于生成微信分享二维码，如不使用indigo主题，则不执行此命令)npm install hexo-asset-image --savehexo generatehexo server在浏览器中打开http://localhost:4000，你将会看到效果 注意：hexo用本地图片步骤1234把主页配置文件_config.yml 里的post_asset_folder:这个选项设置为true在你的E：/blog/blog目录下执行这样一句话npm install hexo-asset-image --save，这是下载安装一个可以上传本地图片的插件运行hexo new &quot;xxxx&quot;来生成md博文时，/source/_posts文件夹内除了xxxx.md文件还有一个同名的文件夹最后在xxxx.md中想引入图片时，先把图片复制到xxxx这个文件夹中，然后只需要在xxxx.md中按照markdown的格式引入图片：![你想输入的替代文字](xxxx/图片名.jpg)注意： xxxx是这个md文件的名字，也是同名文件夹的名字。只需要有文件夹名字即可，不需要有什么绝对路径。你想引入的图片就只需要放入xxxx这个文件夹内就好了，很像引用相对路径。最后检查一下，hexo g生成页面后，进入public\\2017\\02\\26\\index.html文件中查看相关字段，可以发现，html标签内的语句是&lt;img src=&quot;2017/02/26/xxxx/图片名.jpg&quot;&gt;，而不是&lt;img src=&quot;xxxx/图片名.jpg&gt;。这很重要，关乎你的网页是否可以真正加载你想插入的图片。 git 下载地址查询版本 git --versiongit config --system --listgit config --global --listgit config --local --list 配置Git个人信息（使用gitCMD并且进入E：/blog/blog目录）1、设置Git的user name和email：(如果是第一次的话)12git config --global user.name &quot;liuhui&quot;git config --global user.email &quot;pk3845473@163.com&quot; 2、生成密钥ssh-keygen -t rsa -C &quot;pk3845473@163.com&quot; 配置deploy同样在config.yml文件中，找到deploy，然后按照如下修改： deploy 图中红色箭头地址查看如下图： https地址 ssh地址 配置好之后可以生成新文章： 生成新文章命令 hexo new post &quot;article title&quot;(只能为英文 否者在github中不能生成)这时候在我的 电脑的目录下 E：\\blog\\blog\\source\\ _posts 将会看到 article title.md 文件用MarDown编辑器打开就可以编辑文章了。文章编辑好之后，运行生成、部署命令：12部署到github之前执行命令 hexo clean 部署到github命令 hexo deploy git clone git@github.com:yscoder/hexo-theme-indigo.git themes/indigo","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://liuhoi.github.io/tags/hexo/"},{"name":"github","slug":"github","permalink":"https://liuhoi.github.io/tags/github/"},{"name":"git","slug":"git","permalink":"https://liuhoi.github.io/tags/git/"},{"name":"indigo","slug":"indigo","permalink":"https://liuhoi.github.io/tags/indigo/"}]},{"title":"Hello World","slug":"hello-world","date":"2017-10-21T07:18:37.971Z","updated":"2017-10-21T07:18:37.981Z","comments":true,"path":"2017/10/21/hello-world/","link":"","permalink":"https://liuhoi.github.io/2017/10/21/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}